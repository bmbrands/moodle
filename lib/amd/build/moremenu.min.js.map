{"version":3,"sources":["../src/moremenu.js"],"names":["selectors","actions","more","regions","list","popup","moremenu","classes","observed","listitem","itemmoremenu","hidden","init","menu","querySelector","moreButton","addEventListener","e","window","console","log","which","classList","contains","showPopup","hidePopup","target","matches","add","items","querySelectorAll","callback","forEach","call","item","intersectionRatio","remove","moreElems","moreElemsArray","slice","length","moreElemStrings","map","i","outerHTML","innerHTML","join","observer","IntersectionObserver","root","threshold","observe","setAttribute","foundMenuItem","focus","menuItems"],"mappings":"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","sourcesContent":["const selectors = {\n    actions: {\n        more: '[data-action=\"moremenumore\"]',\n    },\n    regions: {\n        list: '[data-region=\"moremenulistitems\"]',\n        popup: '[data-region=\"moremenupopup\"]',\n        moremenu: '[data-region=\"moremenu\"]',\n    },\n    classes: {\n        observed: 'observed',\n        listitem: '.nav-item',\n        itemmoremenu: 'itemoverflow',\n        hidden: 'd-none',\n    }\n};\n\nconst init = menu => {\n    const list = menu.querySelector(selectors.regions.list);\n    const popup = menu.querySelector(selectors.regions.popup);\n    const moreButton = menu.querySelector(selectors.actions.more);\n\n    moreButton.addEventListener('click', (e) => {\n        window.console.log(e.which);\n        if (popup.classList.contains(selectors.classes.hidden)) {\n            showPopup(menu);\n        } else {\n            hidePopup(menu);\n        }\n    });\n\n    // Close the popup on click outside.\n    window.addEventListener('click', (e) => {\n        if (!e.target.matches('.morenav a')) {\n            hidePopup(menu);\n        }\n    });\n\n    if ('IntersectionObserver' in window) {\n        list.classList.add(selectors.classes.observed);\n        const items = list.querySelectorAll(selectors.classes.listitem);\n        const observerSettings = {\n            root: list,\n            threshold: 0.98\n        };\n\n        const callback = (items) => {\n            [].forEach.call(items, (item) => {\n                if (item.intersectionRatio > 0.98) {\n                    item.target.classList.remove(selectors.classes.itemmoremenu);\n                } else {\n                    item.target.classList.add(selectors.classes.itemmoremenu);\n                }\n\n                const moreElems = list.querySelectorAll('.' + selectors.classes.itemmoremenu);\n                const moreElemsArray = [].slice.call(moreElems);\n                if (moreElemsArray.length > 0) {\n                    moreButton.classList.remove(selectors.classes.hidden);\n                    var moreElemStrings = moreElemsArray.map(function (i) {\n                        return i.outerHTML;\n                    });\n                    popup.innerHTML = moreElemStrings.join('');\n                } else {\n                    moreButton.classList.add(selectors.classes.hidden);\n                    hidePopup(menu);\n                    popup.innerHTML = '';\n                }\n            });\n        };\n\n        const observer = new IntersectionObserver(callback, observerSettings);\n\n        [].forEach.call(items, function (item) {\n            observer.observe(item);\n        });\n    }\n};\n\nconst showPopup = (menu) => {\n    const popup = menu.querySelector(selectors.regions.popup);\n    const moreButton = menu.querySelector(selectors.actions.more);\n\n    moreButton.setAttribute('aria-expanded', 'true');\n    popup.classList.remove(selectors.classes.hidden);\n    if (foundMenuItem) {\n        foundMenuItem.focus();\n    }\n\n    let menuItems = popup.querySelectorAll('[role=\"menuitem\"]');\n    let foundMenuItem = false;\n\n    if (menuItems && menuItems.length > 0) {\n        foundMenuItem = menuItems[0];\n    }\n};\n\nconst hidePopup = (menu) => {\n    const popup = menu.querySelector(selectors.regions.popup);\n    const moreButton = menu.querySelector(selectors.actions.more);\n\n    moreButton.setAttribute('aria-expanded', 'false');\n    popup.classList.add(selectors.classes.hidden);\n};\n\nexport default {\n    init: init,\n};\n"],"file":"moremenu.min.js"}