{"version":3,"sources":["../src/image_editable.js"],"names":["selectors","actions","confirm","cancel","cropimage","uploadimage","deleteimage","regions","imagehandler","imagecontrols","alert","zoomslider","editactions","confirmactions","ajaxing","hiddenFormField","classes","hidden","saving","deleting","disabled","enabled","showImageAlert","target","msg","Templates","render","message","closebutton","iswarning","then","html","js","prependNodeContents","removeImageAlert","querySelector","remove","show","classList","add","showDeleteOption","setAttribute","showEditActions","currentimage","getAttribute","updateImage","args","promise","Ajax","call","methodname","fail","Notification","exception","humanFileSize","size","i","Math","floor","log","pow","toFixed","setBackgroundImage","imageHandler","imageUrl","style","backgroundImage","confirmAction","string","action","newconfirm","cloneNode","parentNode","replaceChild","done","str","innerHTML","addEventListener","e","preventDefault","cancelAction","newcancel","imageCropper","currentImage","croppedImage","Croppie","enableExif","viewport","width","height","type","bind","url","result","imageData","ajaxParams","imagedata","split","imagefilename","cropped","component","filearea","contextid","draftitemid","params","success","destroy","warning","imageUploader","siteMaxBytes","event","file","files","match","backupImage","reader","FileReader","onload","filedata","maxbytesstr","name","img","document","createElement","naturalWidth","fileurl","value","readAsDataURL","imageDelete","contains","defaultImage","delete","init"],"mappings":"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","sourcesContent":["/**\n * This file is part of Moodle - http://moodle.org/\n *\n * Moodle is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * Moodle is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @package   image_editable\n * @copyright 2020 Bas Brands\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Croppie from 'core/croppie';\nimport {get_string as getString} from 'core/str';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\n\nconst selectors = {\n    actions: {\n        confirm: '[data-action=\"confirm\"]',\n        cancel: '[data-action=\"cancel\"]',\n        cropimage: '[data-action=\"cropimage\"]',\n        uploadimage: '[data-action=\"uploadimage\"]',\n        deleteimage: '[data-action=\"deleteimage\"]'\n    },\n    regions: {\n        imagehandler: '[data-region=\"imagehandler\"]',\n        imagecontrols: '[data-region=\"imagecontrols\"]',\n        alert: '.alert',\n        zoomslider: '.cr-slider',\n        editactions: '[data-region=\"editactions\"]',\n        confirmactions: '[data-region=\"confirmactions\"]',\n        ajaxing: '[data-region=\"ajaxing\"]',\n        hiddenFormField: '[data-region=\"hiddenformfield\"]'\n    },\n    classes: {\n        hidden: 'd-none',\n        saving: 'saving',\n        deleting: 'deleting',\n        disabled: 'disabled',\n        enabled: 'js-enabled'\n    }\n};\n\n/**\n * Show an alert on the image.\n * @param  {HTMLElement} target DOM node of the editable image\n * @param  {String} msg Message to show in the alert\n * @return {Promise} Template promise.\n */\nconst showImageAlert = (target, msg) => {\n    return Templates.render('core/notification', {\n        message: msg,\n        closebutton: true,\n        iswarning: true\n    }).then((html, js) => {\n        Templates.prependNodeContents(target, html, js);\n        return;\n    });\n};\n\n/**\n * Remove the image alert.\n * @param {HTMLElement} target DOM node of the editable image\n */\nconst removeImageAlert = target => {\n    const alert = target.querySelector(selectors.regions.alert);\n    if (alert) {\n        alert.remove();\n    }\n};\n\n/**\n * Show the spinner.\n * @param  {HTMLElement} target DOM node of the editable image\n * @param  {Bool} show\n */\nconst ajaxing = (target, show) => {\n    const ajaxing = target.querySelector(selectors.regions.ajaxing);\n    if (show) {\n        ajaxing.classList.remove(selectors.classes.hidden);\n    } else {\n        ajaxing.classList.add(selectors.classes.hidden);\n    }\n};\n\n/**\n * Show delete option\n * @param  {HTMLElement} target DOM node of the editable image\n * @param  {Bool} show\n */\n const showDeleteOption = (target, show) => {\n    const deleteimage = target.querySelector(selectors.actions.deleteimage);\n    if (show) {\n        deleteimage.classList.add(selectors.classes.enabled);\n        deleteimage.setAttribute('tabindex', 0);\n    } else {\n        deleteimage.classList.remove(selectors.classes.enabled);\n        deleteimage.setAttribute('tabindex', -1);\n    }\n };\n\n/**\n * Show the edit actions upload image and crop image, this hides\n * the confirm actions.\n * @param  {HTMLElement} target DOM node of the editable image\n */\nconst showEditActions = target => {\n    const currentimage = target.getAttribute('data-currentimage');\n    const cropimage = target.querySelector(selectors.actions.cropimage);\n    const confirmactions = target.querySelector(selectors.regions.confirmactions);\n    const editactions = target.querySelector(selectors.regions.editactions);\n    if (currentimage) {\n        cropimage.classList.remove(selectors.classes.hidden);\n        showDeleteOption(target, true);\n    } else {\n        cropimage.classList.add(selectors.classes.hidden);\n        showDeleteOption(target, false);\n    }\n    confirmactions.classList.add(selectors.classes.hidden);\n    editactions.classList.remove(selectors.classes.hidden);\n    removeImageAlert(target);\n};\n\n/**\n * Save an image from the image handler\n * @param {Object} args The request arguments\n * @return {Promise} Resolved with an array file the stored file url.\n */\nconst updateImage = args => {\n    const request = {\n        methodname: 'core_imageeditable_update_image',\n        args: args\n    };\n\n    let promise = Ajax.call([request])[0]\n        .fail(Notification.exception);\n\n    return promise;\n};\n\n/**\n * Get human file size from bytes.\n * @param {Int} size\n * @returns {string} the human readable size string\n */\nconst humanFileSize = size => {\n    const i = Math.floor(Math.log(size) / Math.log(1024));\n    return (size / Math.pow(1024, i)).toFixed(2) * 1 + ' ' + ['B', 'kB', 'MB', 'GB', 'TB'][i];\n};\n\n/**\n * Set the background image\n * @param {HTMLElement} imageHandler DOM node of the editable image\n * @param {String} imageUrl the new background image url or data.\n */\nconst setBackgroundImage = (imageHandler, imageUrl) => {\n    imageHandler.style.backgroundImage = 'url(\"' + imageUrl + '\")';\n};\n\n/**\n * Show the confirm actions, this hides the edit actions.\n * @param {HTMLElement} target DOM node of the editable image wrapper\n * @param {Promise} string promise to show on confirm button.\n * @param {function} action to execute.\n */\nconst confirmAction = (target, string, action) => {\n    const confirmactions = target.querySelector(selectors.regions.confirmactions);\n    const editactions = target.querySelector(selectors.regions.editactions);\n    const confirm = target.querySelector(selectors.actions.confirm);\n\n    // Create a new button to remove all old event listeners.\n    const newconfirm = confirm.cloneNode(true);\n    confirm.parentNode.replaceChild(newconfirm, confirm);\n\n    string.done(str => {\n        newconfirm.innerHTML = str;\n\n        confirmactions.classList.remove(selectors.classes.hidden);\n        editactions.classList.add(selectors.classes.hidden);\n\n        newconfirm.addEventListener('click', e => {\n            action();\n            e.preventDefault();\n        });\n    });\n    showDeleteOption(target, false);\n};\n\n/**\n * Show the cancel actions.\n * @param {HTMLElement} target DOM node of the editable image wrapper\n * @param {function} action callback to execute.\n */\nconst cancelAction = (target, action) => {\n    let cancel = target.querySelector(selectors.actions.cancel);\n\n    // Create a new button to remove all old event listeners.\n    const newcancel = cancel.cloneNode(true);\n    cancel.parentNode.replaceChild(newcancel, cancel);\n\n    newcancel.addEventListener('click', e => {\n        action();\n        e.preventDefault();\n    });\n};\n\n/**\n * Crop the current image.\n * @param {HTMLElement} target DOM node of the editable image wrapper.\n */\nconst imageCropper = target => {\n    const imageHandler = target.querySelector(selectors.regions.imagehandler);\n\n    let currentImage = target.getAttribute('data-currentimage');\n\n    const size = target.getAttribute('data-size');\n\n    const croppedImage = new Croppie(imageHandler, {\n        enableExif: true,\n        viewport: {\n            width: (size / 100) * (90),\n            height: (size / 100) * (90),\n            type: 'square'\n        }\n    });\n    croppedImage.bind({\n        url: currentImage,\n    });\n\n    setBackgroundImage(imageHandler, '');\n\n    const zoomslider = target.querySelector(selectors.regions.zoomslider);\n    zoomslider.classList.add('form-control-range');\n    // Increase the slider step size so it is keyboard accessible.\n    zoomslider.setAttribute('step', 0.01);\n\n    // Makes the viewport look like a circle\n    if (target.getAttribute('data-rounded') === 'rounded') {\n        target.querySelector('.cr-viewport').classList.add('cr-vp-circle');\n    }\n\n    confirmAction(target, getString('cropimage', 'repository'), () => {\n        croppedImage.result('base64').then(imageData => {\n\n            let ajaxParams = {\n                imagedata: imageData.split('base64,')[1],\n                imagefilename: 'cropped.png',\n                cropped: 1,\n                component: target.getAttribute('data-component'),\n                filearea: target.getAttribute('data-filearea'),\n                contextid: target.getAttribute('data-contextid'),\n                draftitemid: target.getAttribute('data-draftitemid')\n            };\n\n            ajaxing(target, true);\n\n            updateImage({params: ajaxParams}).then(result => {\n                if (result.success) {\n                    setBackgroundImage(imageHandler, imageData);\n                    croppedImage.destroy();\n                }\n                if (result.warning) {\n                    showImageAlert(imageHandler, result.warning, 'warning');\n                }\n                ajaxing(target, false);\n                showEditActions(target);\n                return;\n            });\n            return;\n        });\n    });\n\n    cancelAction(target, () => {\n        croppedImage.destroy();\n        setBackgroundImage(imageHandler, currentImage);\n        showEditActions(target);\n    });\n};\n\n/**\n * Upload a new image.\n * @param {HTMLElement} target DOM node of the editable image wrapper.\n * @param {Int} siteMaxBytes the maximum size for these images.\n * @param {Event} event the event listener event.\n */\nconst imageUploader = (target, siteMaxBytes, event) => {\n    const imageHandler = target.querySelector(selectors.regions.imagehandler);\n\n    const hiddenFormField = target.querySelector(selectors.regions.hiddenFormField);\n\n    let file = event.target.files[0];\n\n    // Only process image files.\n    if (!file.type.match('image.*')) {\n        return;\n    }\n\n    let backupImage = target.getAttribute('data-currentimage');\n\n    if (backupImage === '') {\n        backupImage = target.getAttribute('data-defaultimage');\n    }\n\n    var reader = new FileReader();\n    reader.onload = (() => {\n        let filedata = reader.result;\n\n        if (file.size > siteMaxBytes) {\n            const maxbytesstr = {\n                size: humanFileSize(siteMaxBytes),\n                file: file.name\n            };\n            getString('maxbytesfile', 'error', maxbytesstr).done(message => {\n                showImageAlert(imageHandler, message);\n            });\n            return;\n        }\n\n        // Warn if image resolution is too small.\n        let img = document.createElement('img');\n        img.setAttribute('src', filedata);\n        img.addEventListener('load', () => {\n            if (img.naturalWidth < 512) {\n                getString('resolutionlow', 'error').done(message => {\n                    showImageAlert(imageHandler, message);\n                });\n            }\n        });\n        setBackgroundImage(imageHandler, filedata);\n\n        let ajaxParams = {\n            imagefilename: file.name,\n            imagedata: filedata.split('base64,')[1],\n            cropped: 0,\n            component: target.getAttribute('data-component'),\n            filearea: target.getAttribute('data-filearea'),\n            contextid: target.getAttribute('data-contextid'),\n            draftitemid: target.getAttribute('data-draftitemid')\n        };\n\n        confirmAction(target, getString('save', 'admin'), () => {\n            ajaxing(target, true);\n            updateImage({params: ajaxParams}).then(result => {\n                if (result.success) {\n                    target.setAttribute('data-currentimage', result.fileurl);\n                    backupImage = result.fileurl;\n                }\n                if (result.warning) {\n                    showImageAlert(imageHandler, result.warning, 'warning');\n                }\n                if (hiddenFormField) {\n                    hiddenFormField.value = ajaxParams.draftitemid;\n                }\n                ajaxing(target, false);\n                showEditActions(target);\n                return;\n            });\n        });\n        cancelAction(target, () => {\n            setBackgroundImage(imageHandler, backupImage);\n            showEditActions(target);\n        });\n    });\n    // Read in the image file as a data URL.\n    reader.readAsDataURL(file);\n};\n\n/**\n * Delete the image\n * @param {HTMLElement} target DOM node of the editable image wrapper.\n * @return void.\n */\nconst imageDelete = target => {\n    const deleteimage = target.querySelector(selectors.actions.deleteimage);\n\n    const hiddenFormField = target.querySelector(selectors.regions.hiddenFormField);\n\n    if (!deleteimage.classList.contains(selectors.classes.enabled)) {\n        return '';\n    }\n\n    const defaultImage = target.getAttribute('data-defaultimage');\n\n    const imageHandler = target.querySelector(selectors.regions.imagehandler);\n\n    let ajaxParams = {\n        imagedata: '',\n        imagefilename: '',\n        cropped: 0,\n        component: target.getAttribute('data-component'),\n        filearea: target.getAttribute('data-filearea'),\n        contextid: target.getAttribute('data-contextid'),\n        draftitemid: target.getAttribute('data-draftitemid'),\n        delete: 1\n    };\n\n    confirmAction(target, getString('delete', 'moodle'), () => {\n        ajaxing(target, true);\n        updateImage({params: ajaxParams}).then(result => {\n            if (result.success) {\n                setBackgroundImage(imageHandler, defaultImage);\n                target.setAttribute('data-currentimage', '');\n            }\n            if (hiddenFormField) {\n                hiddenFormField.value = -1;\n            }\n            ajaxing(target, false);\n            showEditActions(target);\n            return;\n        });\n    });\n\n    cancelAction(target, () => {\n        showEditActions(target);\n    });\n};\n\n/**\n * Initiate the editable image controls.\n *\n * @param {HTMLElement} target DOM node of the editable image\n * @param {int} siteMaxBytes\n */\nexport const init = (target, siteMaxBytes) => {\n    const cropimage = target.querySelector(selectors.actions.cropimage);\n    const uploadimage = target.querySelector(selectors.actions.uploadimage);\n    const deleteimage = target.querySelector(selectors.actions.deleteimage);\n    const imagecontrols = target.querySelector(selectors.regions.imagecontrols);\n\n    // Actions on cropping\n    cropimage.addEventListener('click', e => {\n        imageCropper(target);\n        e.preventDefault();\n    });\n\n    // Process the uploaded file\n    uploadimage.addEventListener('change', e => {\n        imageUploader(target, siteMaxBytes, e);\n        e.preventDefault();\n    });\n\n    // Delete the shown image.\n    deleteimage.addEventListener('click', e => {\n        imageDelete(target);\n        e.preventDefault();\n    });\n\n    showEditActions(target);\n    imagecontrols.classList.add('js-enabled');\n};\n"],"file":"image_editable.min.js"}